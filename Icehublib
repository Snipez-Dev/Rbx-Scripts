--[[ 
  IceHub UI v4.6.1
  * 6 tabs: Menu, Spoofer, Script, Server, SUS, Other (Local).
  * Mobile/emulator scaling (UIScale).
  * Noclip for local character, toggleable.
  * Infinite Jump toggleable.
  * ESP highlighter with overhead name labels.
  * Block Kick now overrides multiple methods (Kick, Ban, Shutdown, ForceLeave).
  * Speed-Slider: von 16 bis 300; JumpPower-Slider: von 50 bis 500 (ganz links = Standardwert).
  * Every button gets a slight rounded corner.
  * Improved UNC checks (loadstring, syn.request, getrawmetatable, getgc, debug.getinfo,
     setreadonly, newcclosure, getnamecallmethod, setclipboard) with pcall.
  * Complete code in one piece.
--]]

-------------------------------
-- Services & Local Player
-------------------------------
local Players            = game:GetService("Players")
local UserInputService   = game:GetService("UserInputService")
local RunService         = game:GetService("RunService")
local TeleportService    = game:GetService("TeleportService")
local HttpService        = game:GetService("HttpService")
local LocalizationService= game:GetService("LocalizationService")
local VoiceChatService   = game:FindService("VoiceChatService")
local player             = Players.LocalPlayer

-------------------------------
-- Script Info
-------------------------------
local scriptName    = "IceHub"
local scriptVersion = "v4.6.1"

-- Colors
local topBarColor      = Color3.fromRGB(20,20,20)
local hoverColor       = Color3.fromRGB(40,40,40)
local bgColor          = Color3.fromRGB(35,35,35)
local leftbarColor     = Color3.fromRGB(25,25,25)
local defaultTextColor = Color3.fromRGB(255,255,255)
local activeTextColor  = Color3.fromRGB(0,255,255)
local textColor        = Color3.fromRGB(0,255,255)

-- UI Dimensions
local uiWidth  = 600
local uiHeight = 300
local WIDE_BUTTON_WIDTH = 455

-------------------------------
-- Helper: Rounded Corner for Buttons
-------------------------------
local function addRoundedCorner(button)
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 4)
    corner.Parent = button
end

-------------------------------
-- Anti-AFK
-------------------------------
spawn(function()
    while true do
        wait(60)
        local vu = game:GetService("VirtualUser")
        vu:Button2Down(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
        wait(0.1)
        vu:Button2Up(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
    end
end)

-------------------------------
-- Intro (Small Centered Box)
-------------------------------
local introGui = Instance.new("ScreenGui")
introGui.Name = "IceHubIntro"
introGui.ResetOnSpawn = false
introGui.Parent = player:WaitForChild("PlayerGui")

local introFrame = Instance.new("Frame")
introFrame.Size = UDim2.new(0,300,0,150)
introFrame.Position = UDim2.new(0.5,-150,0.5,-75)
introFrame.BackgroundColor3 = bgColor
introFrame.BorderSizePixel = 0
introFrame.Parent = introGui

local introText = Instance.new("TextLabel")
introText.Size = UDim2.new(1,0,1,0)
introText.BackgroundTransparency = 1
introText.Text = scriptName
introText.TextColor3 = textColor
introText.Font = Enum.Font.GothamBold
introText.TextSize = 30
introText.Parent = introFrame

wait(1.5)
for i = 0, 1, 0.05 do
    introText.TextTransparency = i
    wait(0.05)
end
introGui:Destroy()

-------------------------------
-- Ensure Only One Instance
-------------------------------
local oldGui = player.PlayerGui:FindFirstChild("IceHubUI")
if oldGui then
    oldGui:Destroy()
end

-------------------------------
-- Main ScreenGui & Mobile Scaling
-------------------------------
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "IceHubUI"
screenGui.ResetOnSpawn = false
screenGui.DisplayOrder = 998
screenGui.Parent = player:WaitForChild("PlayerGui")

local mainScale = Instance.new("UIScale")
mainScale.Parent = screenGui
local function updateScale()
    local screenSize = workspace.CurrentCamera.ViewportSize
    if screenSize.X < 800 then
        mainScale.Scale = 0.85
    else
        mainScale.Scale = 1
    end
end
updateScale()
workspace.CurrentCamera:GetPropertyChangedSignal("ViewportSize"):Connect(updateScale)

-------------------------------
-- Watermark (Top-Left, Draggable)
-------------------------------
local startTime = tick()
local watermarkFrame = Instance.new("Frame")
watermarkFrame.Name = "Watermark"
watermarkFrame.Position = UDim2.new(0,10,0,5)
watermarkFrame.BackgroundColor3 = Color3.fromRGB(40,40,40)
watermarkFrame.BorderSizePixel = 0
watermarkFrame.AutomaticSize = Enum.AutomaticSize.XY
watermarkFrame.ClipsDescendants = false
watermarkFrame.Parent = screenGui

local wmSizeConstraint = Instance.new("UISizeConstraint")
wmSizeConstraint.MaxSize = Vector2.new(300,9999)
wmSizeConstraint.Parent = watermarkFrame

local wmCorner = Instance.new("UICorner")
wmCorner.CornerRadius = UDim.new(0,8)
wmCorner.Parent = watermarkFrame

local wmLayout = Instance.new("UIListLayout")
wmLayout.FillDirection = Enum.FillDirection.Vertical
wmLayout.SortOrder = Enum.SortOrder.LayoutOrder
wmLayout.Padding = UDim.new(0,2)
wmLayout.Parent = watermarkFrame

local wmText = Instance.new("TextLabel")
wmText.BackgroundTransparency = 1
wmText.TextColor3 = textColor
wmText.Font = Enum.Font.GothamBold
wmText.TextSize = 14
wmText.TextXAlignment = Enum.TextXAlignment.Left
wmText.Text = scriptName.." | "..player.Name.." | Uptime: 00:00:00"
wmText.AutomaticSize = Enum.AutomaticSize.XY
wmText.LayoutOrder = 1
wmText.Parent = watermarkFrame

local wmLine = Instance.new("Frame")
wmLine.Size = UDim2.new(1,0,0,2)
wmLine.BackgroundColor3 = textColor
wmLine.BorderSizePixel = 0
wmLine.LayoutOrder = 2
wmLine.Parent = watermarkFrame

RunService.RenderStepped:Connect(function()
    local elapsed = tick() - startTime
    local h = math.floor(elapsed/3600)
    local m = math.floor((elapsed%3600)/60)
    local s = math.floor(elapsed%60)
    wmText.Text = string.format("%s | %s | Uptime: %02d:%02d:%02d", scriptName, player.Name, h, m, s)
end)

local wmDragging = false
local wmDragInput, wmMousePos, wmFramePos
local function updateWatermarkDrag(input)
    if not wmDragging then return end
    local delta = input.Position - wmMousePos
    watermarkFrame.Position = UDim2.new(
        wmFramePos.X.Scale,
        wmFramePos.X.Offset + delta.X,
        wmFramePos.Y.Scale,
        wmFramePos.Y.Offset + delta.Y
    )
end
watermarkFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        wmDragging = true
        wmMousePos = input.Position
        wmFramePos = watermarkFrame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                wmDragging = false
            end
        end)
    end
end)
watermarkFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        wmDragInput = input
    end
end)
UserInputService.InputChanged:Connect(function(input)
    if input == wmDragInput and wmDragging then
        updateWatermarkDrag(input)
    end
end)

-------------------------------
-- Main Frame
-------------------------------
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0,uiWidth,0,uiHeight)
mainFrame.Position = UDim2.new(0.5,-uiWidth/2,0.5,-uiHeight/2)
mainFrame.BackgroundColor3 = bgColor
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui

local originalSize = mainFrame.Size
local minimized = false

local dragging = false
local dragInput, mousePos, framePos
local function updateDrag(input)
    if not dragging then return end
    local delta = input.Position - mousePos
    mainFrame.Position = UDim2.new(
        framePos.X.Scale,
        framePos.X.Offset + delta.X,
        framePos.Y.Scale,
        framePos.Y.Offset + delta.Y
    )
end

-------------------------------
-- Close Dialog
-------------------------------
local closeDialog = Instance.new("Frame")
closeDialog.Name = "CloseDialog"
closeDialog.Size = UDim2.new(0,300,0,150)
closeDialog.Position = UDim2.new(0.5,-150,0.5,-75)
closeDialog.BackgroundColor3 = Color3.fromRGB(40,40,40)
closeDialog.BorderSizePixel = 0
closeDialog.Visible = false
closeDialog.ZIndex = 999
closeDialog.Parent = mainFrame

local cdCorner = Instance.new("UICorner")
cdCorner.CornerRadius = UDim.new(0,8)
cdCorner.Parent = closeDialog

local cdText = Instance.new("TextLabel")
cdText.Size = UDim2.new(1,-20,0,60)
cdText.Position = UDim2.new(0,10,0,10)
cdText.BackgroundTransparency = 1
cdText.Text = "Do you really want to close \""..scriptName.."\"?"
cdText.TextColor3 = textColor
cdText.Font = Enum.Font.GothamBold
cdText.TextSize = 14
cdText.TextWrapped = true
cdText.ZIndex = 999
cdText.Parent = closeDialog

local yesBtn = Instance.new("TextButton")
yesBtn.Size = UDim2.new(0,100,0,30)
yesBtn.Position = UDim2.new(0,20,1,-40)
yesBtn.BackgroundColor3 = Color3.fromRGB(60,150,60)
yesBtn.BorderSizePixel = 0
yesBtn.Text = "Yes"
yesBtn.TextColor3 = defaultTextColor
yesBtn.Font = Enum.Font.GothamBold
yesBtn.TextSize = 14
yesBtn.ZIndex = 999
yesBtn.Parent = closeDialog
addRoundedCorner(yesBtn)

local noBtn = Instance.new("TextButton")
noBtn.Size = UDim2.new(0,100,0,30)
noBtn.Position = UDim2.new(1,-120,1,-40)
noBtn.BackgroundColor3 = Color3.fromRGB(200,70,70)
noBtn.BorderSizePixel = 0
noBtn.Text = "No"
noBtn.TextColor3 = defaultTextColor
noBtn.Font = Enum.Font.GothamBold
noBtn.TextSize = 14
noBtn.ZIndex = 999
noBtn.Parent = closeDialog
addRoundedCorner(noBtn)

yesBtn.MouseButton1Click:Connect(function()
    mainFrame:Destroy()
    watermarkFrame:Destroy()
end)
noBtn.MouseButton1Click:Connect(function()
    closeDialog.Visible = false
end)

-------------------------------
-- Top-Bar
-------------------------------
local topBar = Instance.new("Frame")
topBar.Name = "TopBar"
topBar.Size = UDim2.new(1,0,0,30)
topBar.BackgroundColor3 = topBarColor
topBar.BorderSizePixel = 0
topBar.Parent = mainFrame

topBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        mousePos = input.Position
        framePos = mainFrame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)
topBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)
UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        updateDrag(input)
    end
end)

local titleLabel = Instance.new("TextLabel")
titleLabel.Name = "TitleLabel"
titleLabel.Size = UDim2.new(1,-80,1,0)
titleLabel.Position = UDim2.new(0,10,0,0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = scriptName.." - Brookhaven "..scriptVersion
titleLabel.TextColor3 = textColor
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextSize = 14
titleLabel.TextXAlignment = Enum.TextXAlignment.Left
titleLabel.Parent = topBar

local function addPressedEffect(button, defaultColor)
    button.MouseButton1Down:Connect(function()
        button.BackgroundColor3 = hoverColor
    end)
    button.MouseButton1Up:Connect(function()
        button.BackgroundColor3 = defaultColor
    end)
end

local minimizeButton = Instance.new("TextButton")
minimizeButton.Name = "MinimizeButton"
minimizeButton.Size = UDim2.new(0,30,0,30)
minimizeButton.Position = UDim2.new(1,-60,0,0)
minimizeButton.BackgroundColor3 = topBarColor
minimizeButton.BorderSizePixel = 0
minimizeButton.Text = "_"
minimizeButton.TextColor3 = defaultTextColor
minimizeButton.Font = Enum.Font.GothamBold
minimizeButton.TextSize = 14
minimizeButton.Parent = topBar
addPressedEffect(minimizeButton, topBarColor)
addRoundedCorner(minimizeButton)

local closeButton = Instance.new("TextButton")
closeButton.Name = "CloseButton"
closeButton.Size = UDim2.new(0,30,0,30)
closeButton.Position = UDim2.new(1,-30,0,0)
closeButton.BackgroundColor3 = topBarColor
closeButton.BorderSizePixel = 0
closeButton.Text = "X"
closeButton.TextColor3 = defaultTextColor
closeButton.Font = Enum.Font.GothamBold
closeButton.TextSize = 14
closeButton.Parent = topBar
addPressedEffect(closeButton, topBarColor)
addRoundedCorner(closeButton)

closeButton.MouseButton1Click:Connect(function()
    closeDialog.Visible = true
end)

local function toggleContentVisibility(visible)
    for _,child in ipairs(mainFrame:GetChildren()) do
        if child ~= topBar and child ~= closeDialog then
            child.Visible = visible
        end
    end
end

minimizeButton.MouseButton1Click:Connect(function()
    if minimized then
        minimized = false
        mainFrame:TweenSize(originalSize,Enum.EasingDirection.Out,Enum.EasingStyle.Quad,0.3,true)
        task.delay(0.3,function()
            if not minimized then
                toggleContentVisibility(true)
            end
        end)
    else
        minimized = true
        toggleContentVisibility(false)
        mainFrame:TweenSize(UDim2.new(0,uiWidth,0,30),Enum.EasingDirection.Out,Enum.EasingStyle.Quad,0.3,true)
    end
end)

-------------------------------
-- Left Menu (Tabs)
-------------------------------
local leftMenu = Instance.new("Frame")
leftMenu.Name = "LeftMenu"
leftMenu.Size = UDim2.new(0,100,1,-30)
leftMenu.Position = UDim2.new(0,0,0,30)
leftMenu.BackgroundColor3 = leftbarColor
leftMenu.BorderSizePixel = 0
leftMenu.Parent = mainFrame

local activeTabButton = nil

local function addTabButton(text, order)
    local btn = Instance.new("TextButton")
    btn.Name = text.."Button"
    btn.Size = UDim2.new(1,-10,0,30)
    btn.Position = UDim2.new(0,5,0,5 + order*35)
    btn.BackgroundColor3 = leftbarColor
    btn.BorderSizePixel = 0
    btn.Text = text
    btn.TextColor3 = defaultTextColor
    btn.Font = Enum.Font.GothamBold
    btn.TextSize = 14
    addRoundedCorner(btn)
    btn.Parent = leftMenu
    return btn
end

local menuBtn    = addTabButton("Menu",    0)
local spooferBtn = addTabButton("Spoofer", 1)
local otherBtn   = addTabButton("Local",   2)
local scriptBtn  = addTabButton("Script",  3)
local serverBtn  = addTabButton("Server",  4)
local susBtn     = addTabButton("SUS",     5)

-------------------------------
-- Right Content Area
-------------------------------
local contentFrame = Instance.new("Frame")
contentFrame.Name = "ContentFrame"
contentFrame.Size = UDim2.new(1,-100,1,-30)
contentFrame.Position = UDim2.new(0,100,0,30)
contentFrame.BackgroundColor3 = bgColor
contentFrame.BorderSizePixel = 0
contentFrame.Parent = mainFrame

-------------------------------
-- MENU TAB (UserInfo, Stats, Changelog)
-------------------------------
local menuContent = Instance.new("Frame")
menuContent.Name = "MenuContent"
menuContent.Size = UDim2.new(1,0,1,0)
menuContent.BackgroundColor3 = bgColor
menuContent.BorderSizePixel = 0
menuContent.Visible = false
menuContent.Parent = contentFrame

-------------------------------
-- 1) User-Info Box
-------------------------------
local userInfoBox = Instance.new("Frame")
userInfoBox.Name = "UserInfoBox"
userInfoBox.Size = UDim2.new(0,280,0,90)
userInfoBox.Position = UDim2.new(0,12,0,13)
userInfoBox.BackgroundColor3 = leftbarColor
userInfoBox.BorderSizePixel = 0
userInfoBox.Parent = menuContent

local userInfoCorner = Instance.new("UICorner")
userInfoCorner.CornerRadius = UDim.new(0,8)
userInfoCorner.Parent = userInfoBox

local userImage = Instance.new("ImageLabel")
userImage.Name = "UserImage"
userImage.Size = UDim2.new(0,50,0,50)
userImage.Position = UDim2.new(0,10,0,10)
userImage.BackgroundColor3 = Color3.fromRGB(255,255,255)
userImage.BorderSizePixel = 0
userImage.Image = "rbxthumb://type=AvatarHeadShot&id="..player.UserId.."&w=420&h=420"
userImage.Parent = userInfoBox

local userImageCorner = Instance.new("UICorner")
userImageCorner.CornerRadius = UDim.new(1,0)
userImageCorner.Parent = userImage

local userNameLabel = Instance.new("TextLabel")
userNameLabel.Name = "UserNameLabel"
userNameLabel.Size = UDim2.new(1,-70,0,30)
userNameLabel.Position = UDim2.new(0,70,0,10)
userNameLabel.BackgroundTransparency = 1
userNameLabel.Text = player.Name
userNameLabel.TextColor3 = textColor
userNameLabel.Font = Enum.Font.GothamBold
userNameLabel.TextSize = 14
userNameLabel.TextXAlignment = Enum.TextXAlignment.Left
userNameLabel.Parent = userInfoBox

local versionLabel = Instance.new("TextLabel")
versionLabel.Name = "VersionLabel"
versionLabel.Size = UDim2.new(1,-70,0,20)
versionLabel.Position = UDim2.new(0,70,0,40)
versionLabel.BackgroundTransparency = 1
versionLabel.Text = "Version: "..scriptVersion
versionLabel.TextColor3 = textColor
versionLabel.Font = Enum.Font.Gotham
versionLabel.TextSize = 12
versionLabel.TextXAlignment = Enum.TextXAlignment.Left
versionLabel.Parent = userInfoBox

local discordButton = Instance.new("TextButton")
discordButton.Name = "DiscordButton"
discordButton.Size = UDim2.new(0,260,0,30)
discordButton.Position = UDim2.new(0,10,0,55)
discordButton.BackgroundColor3 = leftbarColor
discordButton.BorderSizePixel = 0
discordButton.Text = "Join Discord"
discordButton.TextColor3 = textColor
discordButton.Font = Enum.Font.GothamBold
discordButton.TextSize = 14
discordButton.Parent = userInfoBox
addRoundedCorner(discordButton)

discordButton.MouseButton1Down:Connect(function()
    discordButton.BackgroundColor3 = hoverColor
end)
discordButton.MouseButton1Up:Connect(function()
    discordButton.BackgroundColor3 = leftbarColor
end)
discordButton.MouseButton1Click:Connect(function()
    print("Discord button clicked! Insert link here.")
end)

-------------------------------
-- 2) Stats Box
-------------------------------
local statsBox = Instance.new("Frame")
statsBox.Name = "StatsBox"
statsBox.Size = UDim2.new(0,180,0,90)
statsBox.Position = UDim2.new(0,305,0,13)
statsBox.BackgroundColor3 = leftbarColor
statsBox.BorderSizePixel = 0
statsBox.Parent = menuContent

local statsCorner = Instance.new("UICorner")
statsCorner.CornerRadius = UDim.new(0,8)
statsCorner.Parent = statsBox

local fpsLabel = Instance.new("TextLabel")
fpsLabel.Name = "FPSLabel"
fpsLabel.Size = UDim2.new(1,-20,0,20)
fpsLabel.Position = UDim2.new(0,10,0,10)
fpsLabel.BackgroundTransparency = 1
fpsLabel.Text = "FPS: ???"
fpsLabel.TextColor3 = textColor
fpsLabel.Font = Enum.Font.Gotham
fpsLabel.TextSize = 12
fpsLabel.TextXAlignment = Enum.TextXAlignment.Left
fpsLabel.Parent = statsBox

local pingLabel = Instance.new("TextLabel")
pingLabel.Name = "PingLabel"
pingLabel.Size = UDim2.new(1,-20,0,20)
pingLabel.Position = UDim2.new(0,10,0,35)
pingLabel.BackgroundTransparency = 1
pingLabel.Text = "Ping: ??? ms"
pingLabel.TextColor3 = textColor
pingLabel.Font = Enum.Font.Gotham
pingLabel.TextSize = 12
pingLabel.TextXAlignment = Enum.TextXAlignment.Left
pingLabel.Parent = statsBox

local unlockFpsButton = Instance.new("TextButton")
unlockFpsButton.Name = "UnlockFpsButton"
unlockFpsButton.Size = UDim2.new(0,160,0,30)
unlockFpsButton.Position = UDim2.new(0,10,0,60)
unlockFpsButton.BackgroundColor3 = leftbarColor
unlockFpsButton.BorderSizePixel = 0
unlockFpsButton.Text = "Unlock FPS"
unlockFpsButton.TextColor3 = textColor
unlockFpsButton.Font = Enum.Font.GothamBold
unlockFpsButton.TextSize = 14
unlockFpsButton.Parent = statsBox
addRoundedCorner(unlockFpsButton)

unlockFpsButton.MouseButton1Down:Connect(function()
    unlockFpsButton.BackgroundColor3 = hoverColor
end)
unlockFpsButton.MouseButton1Up:Connect(function()
    unlockFpsButton.BackgroundColor3 = leftbarColor
end)
unlockFpsButton.MouseButton1Click:Connect(function()
    if type(setfpscap)=="function" then
        setfpscap(9999)
        print("FPS unlocked to 9999!")
    else
        print("setfpscap not available (only in Executor).")
    end
end)

RunService.RenderStepped:Connect(function(delta)
    local fps = math.floor(1/delta)
    fpsLabel.Text = "FPS: "..fps

    local pingValue = 0
    local netStats = game:GetService("Stats").Network.ServerStatsItem
    if netStats and netStats.Ping then
        pingValue = math.floor(netStats.Ping:GetValue())
    end
    pingLabel.Text = "Ping: "..pingValue.." ms"
end)

-------------------------------
-- 3) Changelog Box
-------------------------------
local changelogBox = Instance.new("Frame")
changelogBox.Name = "ChangelogBox"
changelogBox.Size = UDim2.new(0,473,0,135)
changelogBox.Position = UDim2.new(0,12,0,115)
changelogBox.BackgroundColor3 = leftbarColor
changelogBox.BorderSizePixel = 0
changelogBox.Parent = menuContent

local changelogCornerBox = Instance.new("UICorner")
changelogCornerBox.CornerRadius = UDim.new(0,8)
changelogCornerBox.Parent = changelogBox

local changelogBoxLabel = Instance.new("TextLabel")
changelogBoxLabel.Name = "ChangelogBoxLabel"
changelogBoxLabel.Size = UDim2.new(1,-20,1,-20)
changelogBoxLabel.Position = UDim2.new(0,10,0,10)
changelogBoxLabel.BackgroundTransparency = 1
changelogBoxLabel.Text = "Changelog:\n- Change 1\n- Change 2\n- Change 3"
changelogBoxLabel.TextColor3 = textColor
changelogBoxLabel.Font = Enum.Font.Gotham
changelogBoxLabel.TextSize = 14
changelogBoxLabel.TextWrapped = true
changelogBoxLabel.TextXAlignment = Enum.TextXAlignment.Left
changelogBoxLabel.Parent = changelogBox

-------------------------------
-- SPOOFER TAB
-------------------------------
local spooferContent = Instance.new("Frame")
spooferContent.Name = "SpooferContent"
spooferContent.Size = UDim2.new(1,0,1,0)
spooferContent.BackgroundTransparency = 1
spooferContent.Visible = false
spooferContent.Parent = contentFrame

local function createWideButton(parent, text, posY)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(0, WIDE_BUTTON_WIDTH, 0, 30)
    btn.Position = UDim2.new(0,20,0,posY)
    btn.BackgroundColor3 = topBarColor
    btn.BorderSizePixel = 0
    btn.Text = text
    btn.TextColor3 = textColor
    btn.Font = Enum.Font.GothamBold
    btn.TextSize = 14
    addPressedEffect(btn, topBarColor)
    addRoundedCorner(btn)
    btn.Parent = parent
    return btn
end

local spoofCallBtn = createWideButton(spooferContent,"Spoof Call",20)
spoofCallBtn.MouseButton1Click:Connect(function()
    print("Spoof Call pressed!")
    if VoiceChatService and VoiceChatService.joinVoice then
        VoiceChatService:joinVoice()
    else
        print("VoiceChatService not available.")
    end
end)

local blockKickBtn = createWideButton(spooferContent,"Block Kick",60)
blockKickBtn.MouseButton1Click:Connect(function()
    print("Block Kick pressed!")
    if VoiceChatService then
        local funcsToOverride = {"Kick", "Ban", "Shutdown", "ForceLeave"}
        for _, funcName in ipairs(funcsToOverride) do
            if VoiceChatService[funcName] and type(VoiceChatService[funcName])=="function" then
                VoiceChatService[funcName] = function(...)
                    warn("VoiceChatService:"..funcName.." blocked!")
                end
            end
        end
        print("VoiceChatService kick/ban functions overridden.")
    else
        print("VoiceChatService not available.")
    end
end)

-------------------------------
-- SCRIPT TAB
-------------------------------
local scriptContent = Instance.new("Frame")
scriptContent.Name = "ScriptContent"
scriptContent.Size = UDim2.new(1,0,1,0)
scriptContent.BackgroundTransparency = 1
scriptContent.Visible = false
scriptContent.Parent = contentFrame

local function createScriptButton(parent, text, posY, url)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(0, WIDE_BUTTON_WIDTH, 0, 30)
    btn.Position = UDim2.new(0,20,0,posY)
    btn.BackgroundColor3 = topBarColor
    btn.BorderSizePixel = 0
    btn.Text = text
    btn.TextColor3 = textColor
    btn.Font = Enum.Font.GothamBold
    btn.TextSize = 14
    addPressedEffect(btn, topBarColor)
    addRoundedCorner(btn)
    btn.Parent = parent
    btn.MouseButton1Click:Connect(function()
        print("Loading script for:", text)
        loadstring(game:HttpGet(url))()
    end)
end

createScriptButton(scriptContent, "Infinite yield", 20,  "https://raw.githubusercontent.com/edgeiy/infiniteyield/master/source")
createScriptButton(scriptContent, "Open GUI",       60,  "https://raw.githubusercontent.com/Snipez-Dev/SynapX/refs/heads/main/Open")
createScriptButton(scriptContent, "Simple spy v3",  100, "https://raw.githubusercontent.com/78n/SimpleSpy/main/SimpleSpyBeta.lua")
createScriptButton(scriptContent, "Dark Dex v4",    140, "https://raw.githubusercontent.com/SpaceSpiffer/Scripts/main/Script5")

-------------------------------
-- SERVER TAB
-------------------------------
local serverContent = Instance.new("Frame")
serverContent.Name = "ServerContent"
serverContent.Size = UDim2.new(1,0,1,0)
serverContent.BackgroundTransparency = 1
serverContent.Visible = false
serverContent.Parent = contentFrame

local serverBox = Instance.new("Frame")
serverBox.Name = "ServerBox"
serverBox.Size = UDim2.new(0,455,0,150)
serverBox.AnchorPoint = Vector2.new(0.5,0)
serverBox.Position = UDim2.new(0.5,0,0,20)
serverBox.BackgroundColor3 = leftbarColor
serverBox.BorderSizePixel = 0
serverBox.Parent = serverContent

local serverCorner = Instance.new("UICorner")
serverCorner.CornerRadius = UDim.new(0,8)
serverCorner.Parent = serverBox

local serverLanguage = "Unknown"
do
    local ok, res = pcall(function() return LocalizationService.RobloxLocaleId end)
    if ok and res then
        serverLanguage = res
    end
end

local serverInfo = Instance.new("TextLabel")
serverInfo.Size = UDim2.new(1,-20,0,80)
serverInfo.Position = UDim2.new(0,10,0,10)
serverInfo.BackgroundTransparency = 1
serverInfo.TextColor3 = textColor
serverInfo.Font = Enum.Font.Gotham
serverInfo.TextSize = 14
serverInfo.TextWrapped = true
serverInfo.Text = "Players in server: "..#Players:GetPlayers()..
                  "\nServer language: "..serverLanguage..
                  "\nPlace ID: "..game.PlaceId..
                  "\n\n(Extra spacing)"
serverInfo.Parent = serverBox

local rejoinBtn = Instance.new("TextButton")
rejoinBtn.Name = "RejoinBtn"
rejoinBtn.Size = UDim2.new(0,180,0,30)
rejoinBtn.AnchorPoint = Vector2.new(0.5,1)
rejoinBtn.Position = UDim2.new(0.5,0,1,-10)
rejoinBtn.BackgroundColor3 = leftbarColor
rejoinBtn.BorderSizePixel = 0
rejoinBtn.Text = "Rejoin"
rejoinBtn.TextColor3 = textColor
rejoinBtn.Font = Enum.Font.GothamBold
rejoinBtn.TextSize = 14
addPressedEffect(rejoinBtn, leftbarColor)
addRoundedCorner(rejoinBtn)
rejoinBtn.Parent = serverBox

rejoinBtn.MouseButton1Click:Connect(function()
    print("Rejoin pressed!")
    TeleportService:Teleport(game.PlaceId, player)
end)

-------------------------------
-- SUS TAB
-------------------------------
local susContent = Instance.new("Frame")
susContent.Name = "SUSContent"
susContent.Size = UDim2.new(1,0,1,0)
susContent.BackgroundTransparency = 1
susContent.Visible = false
susContent.Parent = contentFrame

local susScroll = Instance.new("ScrollingFrame")
susScroll.Name = "SUSScroll"
susScroll.Size = UDim2.new(1,-40,1,-40)
susScroll.Position = UDim2.new(0,20,0,20)
susScroll.BackgroundTransparency = 1
susScroll.ScrollingDirection = Enum.ScrollingDirection.Y
susScroll.ScrollBarThickness = 6
susScroll.AutomaticCanvasSize = Enum.AutomaticSize.Y
susScroll.Parent = susContent

local susLayout = Instance.new("UIListLayout")
susLayout.Parent = susScroll
susLayout.SortOrder = Enum.SortOrder.LayoutOrder
susLayout.Padding = UDim.new(0,10)

local susScriptsData = {
    {name="Bang V2",    r6="https://pastebin.com/raw/aPSHMV6K",   r15="https://pastebin.com/raw/1ePMTt9n"},
    {name="Get Banged", r6="https://pastebin.com/raw/zHbw7ND1",   r15="https://pastebin.com/raw/7hvcjDnW"},
    {name="Suck",       r6="https://pastebin.com/raw/SymCfnAW",   r15="https://pastebin.com/raw/p8yxRfr4"},
    {name="Get Suc",    r6="https://pastebin.com/raw/FPu4e2Qh",   r15="https://pastebin.com/raw/DyPP2tAF"},
    {name="Jerk",       r6="https://pastefy.app/wa3v2Vgm/raw",    r15="https://pastefy.app/YZoglOyJ/raw"}
}
for _, item in ipairs(susScriptsData) do
    local r15Btn = Instance.new("TextButton")
    r15Btn.Name = item.name.."_R15_Button"
    r15Btn.Size = UDim2.new(0,455,0,30)
    r15Btn.BackgroundColor3 = topBarColor
    r15Btn.BorderSizePixel = 0
    r15Btn.Text = item.name.." (R15)"
    r15Btn.TextColor3 = textColor
    r15Btn.Font = Enum.Font.GothamBold
    r15Btn.TextSize = 14
    addRoundedCorner(r15Btn)
    r15Btn.Parent = susScroll
    addPressedEffect(r15Btn, topBarColor)
    r15Btn.MouseButton1Click:Connect(function()
        print("Loading R15 script for:", item.name)
        local success, err = pcall(function()
            loadstring(game:HttpGet(item.r15))()
        end)
        if not success then
            warn("Error in R15 script:", err)
        end
    end)
    
    local r6Btn = Instance.new("TextButton")
    r6Btn.Name = item.name.."_R6_Button"
    r6Btn.Size = UDim2.new(0,455,0,30)
    r6Btn.BackgroundColor3 = topBarColor
    r6Btn.BorderSizePixel = 0
    r6Btn.Text = item.name.." (R6)"
    r6Btn.TextColor3 = textColor
    r6Btn.Font = Enum.Font.GothamBold
    r6Btn.TextSize = 14
    addRoundedCorner(r6Btn)
    r6Btn.Parent = susScroll
    addPressedEffect(r6Btn, topBarColor)
    r6Btn.MouseButton1Click:Connect(function()
        print("Loading R6 script for:", item.name)
        local success2, err2 = pcall(function()
            loadstring(game:HttpGet(item.r6))()
        end)
        if not success2 then
            warn("Error in R6 script:", err2)
        end
    end)
end

-------------------------------
-- OTHER TAB (Local Features)
-------------------------------
local otherContent = Instance.new("ScrollingFrame")
otherContent.Name = "OtherContent"
otherContent.Size = UDim2.new(1,0,1,0)
otherContent.BackgroundTransparency = 1
otherContent.Visible = false
otherContent.ScrollingDirection = Enum.ScrollingDirection.Y
otherContent.ScrollBarThickness = 6
otherContent.AutomaticCanvasSize = Enum.AutomaticSize.Y
otherContent.Parent = contentFrame

local otherLayout = Instance.new("UIListLayout")
otherLayout.Parent = otherContent
otherLayout.SortOrder = Enum.SortOrder.LayoutOrder
otherLayout.Padding = UDim.new(0,10)

local function createSectionFrame(height)
    local f = Instance.new("Frame")
    f.Size = UDim2.new(1,0,0,height)
    f.BackgroundTransparency = 1
    f.BorderSizePixel = 0
    f.Parent = otherContent
    return f
end

-------------------------------
-- Noclip
-------------------------------
local noclipEnabled = false
RunService.Stepped:Connect(function()
    if noclipEnabled and player.Character then
        for _, part in ipairs(player.Character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
    end
end)

-------------------------------
-- Infinite Jump
-------------------------------
local infiniteJumpEnabled = false
UserInputService.JumpRequest:Connect(function()
    if infiniteJumpEnabled and player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
        player.Character:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping)
    end
end)

-------------------------------
-- Centered Sliders
-- Für Speed: von 16 bis 300, Standard = 16
-- Für JumpPower: von 50 bis 500, Standard = 50
-------------------------------
local function createCenteredSlider(parent, labelText, minVal, maxVal, defaultVal, callback)
    local sliderFrame = Instance.new("Frame")
    sliderFrame.Size = UDim2.new(0, WIDE_BUTTON_WIDTH, 0, 40)
    sliderFrame.AnchorPoint = Vector2.new(0.5,0)
    sliderFrame.Position = UDim2.new(0.5,0,0,9)
    sliderFrame.BackgroundColor3 = leftbarColor
    sliderFrame.BorderSizePixel = 0
    sliderFrame.Parent = parent

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0,8)
    corner.Parent = sliderFrame

    local textLbl = Instance.new("TextLabel")
    textLbl.Size = UDim2.new(1,-10,0,20)
    textLbl.Position = UDim2.new(0,5,0,5)
    textLbl.BackgroundTransparency = 1
    textLbl.Text = labelText..": "..defaultVal
    textLbl.TextColor3 = textColor
    textLbl.Font = Enum.Font.GothamBold
    textLbl.TextSize = 14
    textLbl.TextXAlignment = Enum.TextXAlignment.Left
    textLbl.Parent = sliderFrame

    local fill = Instance.new("Frame")
    fill.Size = UDim2.new(0,0,0,6)
    fill.Position = UDim2.new(0,5,0,30)
    fill.BackgroundColor3 = textColor
    fill.BorderSizePixel = 0
    fill.Parent = sliderFrame

    local sliderValue = defaultVal
    local userInputConn

    local function updateFill(posX)
        local availableWidth = sliderFrame.AbsoluteSize.X
        local relX = math.clamp(posX - sliderFrame.AbsolutePosition.X, 0, availableWidth)
        local percent = relX / availableWidth
        sliderValue = math.floor(minVal + (maxVal - minVal) * percent)
        -- Wenn ganz links, dann Standardwert
        if sliderValue < defaultVal then
            sliderValue = defaultVal
        end
        fill.Size = UDim2.new(percent,0,0,6)
        textLbl.Text = labelText..": "..tostring(sliderValue)
        if callback then callback(sliderValue) end
    end

    sliderFrame.InputBegan:Connect(function(inp)
        if inp.UserInputType==Enum.UserInputType.MouseButton1 then
            updateFill(inp.Position.X)
            userInputConn = UserInputService.InputChanged:Connect(function(i)
                if i.UserInputType==Enum.UserInputType.MouseMovement then
                    updateFill(i.Position.X)
                end
            end)
        end
    end)
    sliderFrame.InputEnded:Connect(function(inp)
        if inp.UserInputType==Enum.UserInputType.MouseButton1 and userInputConn then
            userInputConn:Disconnect()
        end
    end)
end

local speedSec = createSectionFrame(50)
-- Speed: min=16, max=300, Standard=16
createCenteredSlider(speedSec, "Speed", 16, 300, 16, function(val)
    local hum = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
    if hum then
        hum.WalkSpeed = val
    end
end)

local jumpSec = createSectionFrame(50)
-- JumpPower: min=50, max=500, Standard=50
createCenteredSlider(jumpSec, "JumpPower", 50, 500, 50, function(val)
    local hum = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
    if hum then
        hum.JumpPower = val
    end
end)

-------------------------------
-- Centered Checkboxes (ESP, Noclip, Infinite Jump)
-------------------------------
local function createCenteredCheckbox(parent, text, defaultVal, callback)
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0,WIDE_BUTTON_WIDTH,0,30)
    frame.AnchorPoint = Vector2.new(0.5,0)
    frame.Position = UDim2.new(0.5,0,0,0)
    frame.BackgroundColor3 = leftbarColor
    frame.BorderSizePixel = 0
    frame.Parent = parent

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0,8)
    corner.Parent = frame

    local lbl = Instance.new("TextLabel")
    lbl.Size = UDim2.new(1,-30,1,0)
    lbl.Position = UDim2.new(0,5,0,0)
    lbl.BackgroundTransparency = 1
    lbl.Text = text
    lbl.TextColor3 = textColor
    lbl.Font = Enum.Font.GothamBold
    lbl.TextSize = 14
    lbl.TextXAlignment = Enum.TextXAlignment.Left
    lbl.Parent = frame

    local box = Instance.new("Frame")
    box.Size = UDim2.new(0,20,0,20)
    box.Position = UDim2.new(1,-25,0.5,-10)
    box.BackgroundColor3 = Color3.fromRGB(40,40,40)
    box.BorderSizePixel = 0
    box.Parent = frame

    local boxCorner = Instance.new("UICorner")
    boxCorner.CornerRadius = UDim.new(0,4)
    boxCorner.Parent = box

    local checkMark = Instance.new("Frame")
    checkMark.Size = UDim2.new(1,0,1,0)
    checkMark.BackgroundColor3 = textColor
    checkMark.BorderSizePixel = 0
    checkMark.Visible = defaultVal
    checkMark.Parent = box

    local enabled = defaultVal
    local function setEnabled(v)
        enabled = v
        checkMark.Visible = enabled
        if callback then callback(enabled) end
    end

    frame.InputBegan:Connect(function(inp)
        if inp.UserInputType==Enum.UserInputType.MouseButton1 then
            setEnabled(not enabled)
        end
    end)
end

local espSec = createSectionFrame(40)
local espEnabled = false
createCenteredCheckbox(espSec,"ESP",false,function(val)
    espEnabled = val
    if val then
        for _,plr in ipairs(Players:GetPlayers()) do
            if plr~=player then
                removeESP(plr)
                createESP(plr)
            end
        end
    else
        for _,plr in ipairs(Players:GetPlayers()) do
            if plr~=player then
                removeESP(plr)
            end
        end
    end
end)

local noclipSec = createSectionFrame(40)
createCenteredCheckbox(noclipSec,"Noclip",false,function(val)
    noclipEnabled = val
    if not val and player.Character then
        for _, part in ipairs(player.Character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = true
            end
        end
    end
end)

local infJumpSec = createSectionFrame(40)
createCenteredCheckbox(infJumpSec,"Infinite Jump",false,function(val)
    infiniteJumpEnabled = val
    if val then
        print("Infinite Jump enabled")
    else
        print("Infinite Jump disabled")
    end
end)

-- Simple spectate system
local dropSec = createSectionFrame(150)
local dropFrame = Instance.new("Frame")
dropFrame.Size = UDim2.new(0, WIDE_BUTTON_WIDTH, 0, 150)
dropFrame.AnchorPoint = Vector2.new(0.5,0)
dropFrame.Position = UDim2.new(0.5,0,0,0)
dropFrame.BackgroundColor3 = leftbarColor
dropFrame.BorderSizePixel = 0
dropFrame.Parent = dropSec

local dfCorner = Instance.new("UICorner")
dfCorner.CornerRadius = UDim.new(0,8)
dfCorner.Parent = dropFrame

local arrowBtn = Instance.new("TextButton")
arrowBtn.Size = UDim2.new(0,20,0,20)
arrowBtn.Position = UDim2.new(0,5,0,5)
arrowBtn.BackgroundColor3 = leftbarColor
arrowBtn.BorderSizePixel = 0
arrowBtn.Text = ">"
arrowBtn.TextColor3 = textColor
arrowBtn.Font = Enum.Font.GothamBold
arrowBtn.TextSize = 14
arrowBtn.Parent = dropFrame
addRoundedCorner(arrowBtn)

local dropLabel = Instance.new("TextLabel")
dropLabel.Size = UDim2.new(1,-30,0,20)
dropLabel.Position = UDim2.new(0,30,0,5)
dropLabel.BackgroundTransparency = 1
dropLabel.Text = "Spectate Player"
dropLabel.TextColor3 = textColor
dropLabel.Font = Enum.Font.GothamBold
dropLabel.TextSize = 14
dropLabel.TextXAlignment = Enum.TextXAlignment.Left
dropLabel.Parent = dropFrame

local playersScroll = Instance.new("ScrollingFrame")
playersScroll.Size = UDim2.new(1,-10,0,100)
playersScroll.Position = UDim2.new(0,5,0,30)
playersScroll.BackgroundColor3 = Color3.fromRGB(40,40,40)
playersScroll.BorderSizePixel = 0
playersScroll.ScrollingDirection = Enum.ScrollingDirection.Y
playersScroll.ScrollBarThickness = 6
playersScroll.AutomaticCanvasSize = Enum.AutomaticSize.Y
playersScroll.Visible = false
playersScroll.Parent = dropFrame

local psLayout = Instance.new("UIListLayout")
psLayout.Parent = playersScroll
psLayout.SortOrder = Enum.SortOrder.LayoutOrder
psLayout.Padding = UDim.new(0,2)

local selectedPlayer = nil
local function refreshPlayers()
    for _,child in ipairs(playersScroll:GetChildren()) do
        if child:IsA("TextButton") then
            child:Destroy()
        end
    end
    for _,plr in ipairs(Players:GetPlayers()) do
        local pBtn = Instance.new("TextButton")
        pBtn.Size = UDim2.new(1,-4,0,30)
        pBtn.BackgroundColor3 = topBarColor
        pBtn.BorderSizePixel = 0
        pBtn.Text = plr.Name
        pBtn.TextColor3 = textColor
        pBtn.Font = Enum.Font.GothamBold
        pBtn.TextSize = 14
        addPressedEffect(pBtn, topBarColor)
        addRoundedCorner(pBtn)
        pBtn.Parent = playersScroll
        pBtn.MouseButton1Click:Connect(function()
            selectedPlayer = plr
            print("Selected player:", plr.Name)
        end)
    end
end

refreshPlayers()
Players.PlayerAdded:Connect(refreshPlayers)
Players.PlayerRemoving:Connect(refreshPlayers)

local isOpen = false
local function toggleDropdown()
    isOpen = not isOpen
    if isOpen then
        arrowBtn.Text = "v"
        playersScroll.Visible = true
    else
        arrowBtn.Text = ">"
        playersScroll.Visible = false
    end
end
arrowBtn.MouseButton1Click:Connect(toggleDropdown)

local spectateSec = createSectionFrame(40)
local spectateFrame = Instance.new("Frame")
spectateFrame.Size = UDim2.new(0, WIDE_BUTTON_WIDTH, 0, 30)
spectateFrame.AnchorPoint = Vector2.new(0.5,0)
spectateFrame.Position = UDim2.new(0.5,0,0,0)
spectateFrame.BackgroundColor3 = leftbarColor
spectateFrame.BorderSizePixel = 0
spectateFrame.Parent = spectateSec

local sfCorner = Instance.new("UICorner")
sfCorner.CornerRadius = UDim.new(0,8)
sfCorner.Parent = spectateFrame

local spectateLabel = Instance.new("TextLabel")
spectateLabel.Size = UDim2.new(1,-30,1,0)
spectateLabel.Position = UDim2.new(0,5,0,0)
spectateLabel.BackgroundTransparency = 1
spectateLabel.Text = "Spectate"
spectateLabel.TextColor3 = textColor
spectateLabel.Font = Enum.Font.GothamBold
spectateLabel.TextSize = 14
spectateLabel.TextXAlignment = Enum.TextXAlignment.Left
spectateLabel.Parent = spectateFrame

local spBox = Instance.new("Frame")
spBox.Size = UDim2.new(0,20,0,20)
spBox.Position = UDim2.new(1,-25,0.5,-10)
spBox.BackgroundColor3 = Color3.fromRGB(40,40,40)
spBox.BorderSizePixel = 0
spBox.Parent = spectateFrame

local spBoxCorner = Instance.new("UICorner")
spBoxCorner.CornerRadius = UDim.new(0,4)
spBoxCorner.Parent = spBox

local spCheck = Instance.new("Frame")
spCheck.Size = UDim2.new(1,0,1,0)
spCheck.BackgroundColor3 = textColor
spCheck.BorderSizePixel = 0
spCheck.Visible = false
spCheck.Parent = spBox

local spectateEnabled = false
local function startSpectate(targetPlr)
    if not targetPlr or not targetPlr.Character then return end
    local hum = targetPlr.Character:FindFirstChildOfClass("Humanoid")
    if hum then
        workspace.CurrentCamera.CameraSubject = hum
    end
end
local function stopSpectate()
    if player.Character then
        local myHum = player.Character:FindFirstChildOfClass("Humanoid")
        if myHum then
            workspace.CurrentCamera.CameraSubject = myHum
        end
    end
end
local function setSpectate(val)
    spectateEnabled = val
    spCheck.Visible = val
    if val then
        if selectedPlayer then
            startSpectate(selectedPlayer)
            print("Spectate on:", selectedPlayer.Name)
        else
            warn("No player selected to spectate.")
        end
    else
        print("Spectate off")
        stopSpectate()
    end
end
spectateFrame.InputBegan:Connect(function(inp)
    if inp.UserInputType==Enum.UserInputType.MouseButton1 then
        setSpectate(not spectateEnabled)
    end
end)

-------------------------------
-- Put dropSec and spectateSec into Other tab
-------------------------------
dropSec.Parent = otherContent
spectateSec.Parent = otherContent

-------------------------------
-- Tab Management
-------------------------------
local tabContents = {
    menuContent,
    spooferContent,
    otherContent,
    scriptContent,
    serverContent,
    susContent
}
local function hideAllTabs()
    for _,frame in ipairs(tabContents) do
        frame.Visible = false
    end
end
local function showTab(frame)
    hideAllTabs()
    frame.Visible = true
end
local function updateTabColors(activeButton)
    menuBtn.TextColor3    = defaultTextColor
    spooferBtn.TextColor3 = defaultTextColor
    scriptBtn.TextColor3  = defaultTextColor
    serverBtn.TextColor3  = defaultTextColor
    susBtn.TextColor3     = defaultTextColor
    otherBtn.TextColor3   = defaultTextColor

    activeButton.TextColor3 = activeTextColor
    activeTabButton = activeButton
end
menuBtn.MouseButton1Click:Connect(function() showTab(menuContent) updateTabColors(menuBtn) end)
spooferBtn.MouseButton1Click:Connect(function() showTab(spooferContent) updateTabColors(spooferBtn) end)
scriptBtn.MouseButton1Click:Connect(function() showTab(scriptContent) updateTabColors(scriptBtn) end)
serverBtn.MouseButton1Click:Connect(function() showTab(serverContent) updateTabColors(serverBtn) end)
susBtn.MouseButton1Click:Connect(function() showTab(susContent) updateTabColors(susBtn) end)
otherBtn.MouseButton1Click:Connect(function() showTab(otherContent) updateTabColors(otherBtn) end)
hideAllTabs()
menuContent.Visible = true
updateTabColors(menuBtn)

-------------------------------
-- URL-Fetching & Blacklist
-------------------------------
local function fetchURL(url)
    local success, result = pcall(function()
        return HttpService:GetAsync(url)
    end)
    if success and result and #result>0 then
        print("[FetchURL] Loaded via HttpService:GetAsync")
        return result
    end
    if request then
        local ok2, response = pcall(function()
            local req = request({Url=url,Method="GET"})
            return req.Body
        end)
        if ok2 and response and #response>0 then
            print("[FetchURL] Loaded via request")
            return response
        end
    end
    if http_request then
        local ok3, response = pcall(function()
            local req = http_request({Url=url,Method="GET"})
            return req.Body
        end)
        if ok3 and response and #response>0 then
            print("[FetchURL] Loaded via http_request")
            return response
        end
    end
    warn("[FetchURL] Failed to fetch URL content.")
    return nil
end

local blacklistedNames = {}
local function loadBlacklist()
    local url = "https://raw.githubusercontent.com/Snipez-Dev/SynapX/refs/heads/main/banm"
    local content = fetchURL(url)
    if content then
        local names = string.split(content,"\n")
        for _, name in ipairs(names) do
            if name and name~="" then
                blacklistedNames[name] = true
            end
        end
        print("[loadBlacklist] Blacklist loaded.")
        return blacklistedNames
    else
        warn("[loadBlacklist] Could not load blacklist.")
        return {}
    end
end

local function checkBlacklist()
    local blacklisted = loadBlacklist()
    print("[Debug] Checking blacklist...")
    if blacklisted[player.Name] then
        warn("[Fail] Player "..player.Name.." is blacklisted. Kicking player...")
        player:Kick("You are blacklisted! Contact the developer for details.")
    else
        print("[Success] Player "..player.Name.." is not blacklisted.")
    end
end
checkBlacklist()

-------------------------------
-- Executor Detection & UNC Checks
-------------------------------
local realExecutorName = "Unknown"
local function checkExecutor()
    local ok, _ = pcall(function()
        if syn and syn.request then
            realExecutorName = "Synapse X"
        elseif KRNL_LOADED then
            realExecutorName = "KRNL"
        elseif fluxus and fluxus.request then
            realExecutorName = "Fluxus"
        elseif is_sirhurt_closure then
            realExecutorName = "SirHurt"
        elseif type(identifyexecutor)=="function" then
            local name, ver = identifyexecutor()
            if name then
                realExecutorName = name
            end
        end
    end)
    if not ok then
        realExecutorName = "Unknown"
    end

    if realExecutorName=="Unknown" then
        warn("Executor not recognized. Some features may not work properly.")
    else
        print("Detected Executor:", realExecutorName)
    end
end
checkExecutor()

local function checkLoadstring()
    local ok, _ = pcall(function()
        local f = loadstring("return 123")
        local s, r = pcall(f)
        if not (s and r==123) then
            error("loadstring test mismatch")
        end
    end)
    return ok
end

local function checkSynRequest()
    local ok, _ = pcall(function()
        if syn and type(syn.request)=="function" then
            local resp = syn.request({Url="https://httpbin.org/get",Method="GET"})
            if not (resp and resp.Body) then
                error("syn.request test no body")
            end
        else
            error("syn.request not found")
        end
    end)
    return ok
end

local function checkGetrawmetatable()
    local ok, _ = pcall(function()
        if type(getrawmetatable)~="function" then
            error("getrawmetatable not a function")
        end
        local mt = getrawmetatable(_G)
        if type(mt)~="table" then
            error("invalid getrawmetatable result")
        end
    end)
    return ok
end

local function checkGetgc()
    local ok, _ = pcall(function()
        if type(getgc)~="function" then
            error("getgc not a function")
        end
        local t = getgc()
        if type(t)~="table" then
            error("getgc did not return a table")
        end
    end)
    return ok
end

local function checkDebugInfo()
    local ok, _ = pcall(function()
        if type(debug)~="table" or type(debug.getinfo)~="function" then
            error("debug.getinfo not found")
        end
        local info = debug.getinfo(checkDebugInfo)
        if type(info)~="table" then
            error("debug.getinfo invalid data")
        end
    end)
    return ok
end

local function checkSetreadonly()
    return type(setreadonly)=="function"
end
local function checkNewcclosure()
    return type(newcclosure)=="function"
end
local function checkGetnamecallmethod()
    return type(getnamecallmethod)=="function"
end
local function checkSetclipboard()
    return type(setclipboard)=="function"
end

local uncFeatures = {
    {name="loadstring",       func=checkLoadstring},
    {name="syn.request",      func=checkSynRequest},
    {name="getrawmetatable",  func=checkGetrawmetatable},
    {name="getgc",            func=checkGetgc},
    {name="debug.getinfo",    func=checkDebugInfo},
}
local additionalFeatures = {
    {"setreadonly", checkSetreadonly},
    {"newcclosure", checkNewcclosure},
    {"getnamecallmethod", checkGetnamecallmethod},
    {"setclipboard", checkSetclipboard},
}
for _, feat in ipairs(additionalFeatures) do
    table.insert(uncFeatures, {name = feat[1], func = feat[2]})
end

local total = #uncFeatures
local supported = 0
for _, feature in ipairs(uncFeatures) do
    local ok = feature.func()
    if ok then
        supported = supported + 1
    end
end
print(string.format("Your Executor <%s> supports %d of %d advanced features.", realExecutorName, supported, total))
